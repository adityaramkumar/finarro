name: Deploy finarro to AWS

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy Backend to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd /home/ec2-user/finarro
            
            # Pull latest changes
            git pull origin main
            
            # Install backend dependencies
            cd backend
            npm install --production
            
            # Run database migrations
            npx knex migrate:latest --env production
            
            # Restart backend service
            pm2 restart finarro-backend
            
            # Check if backend is running
            sleep 5
            pm2 status finarro-backend
            
            # Test health endpoint
            curl -f http://localhost:3001/health || exit 1

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: deploy-backend
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
          
      - name: Install dependencies
        run: |
          cd frontend
          npm ci
          
      - name: Build application
        run: |
          cd frontend
          npm run build
        env:
          REACT_APP_API_URL: https://api.finarro.com/api
          REACT_APP_STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}
          GENERATE_SOURCEMAP: false
          NODE_ENV: production
          CI: false
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
          
      - name: Deploy to S3
        run: |
          cd frontend
          aws s3 sync build/ s3://finarro-frontend --delete
          
      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation --distribution-id EL2U3DI4QLK97 --paths "/*"
          
      - name: Wait for CloudFront invalidation
        run: |
          echo "Waiting for CloudFront invalidation to complete..."
          aws cloudfront wait invalidation-completed --distribution-id EL2U3DI4QLK97 --id $(aws cloudfront list-invalidations --distribution-id EL2U3DI4QLK97 --query 'InvalidationList.Items[0].Id' --output text)
          
  test-deployment:
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    steps:
      - name: Test API Health
        run: |
          # Test API endpoint
          curl -f https://api.finarro.com/health
          
      - name: Test Frontend
        run: |
          # Test frontend is accessible
          curl -f -I https://finarro.com
          
      - name: Test Login Flow
        run: |
          # Test CORS and API connectivity
          curl -f -X OPTIONS -H "Origin: https://finarro.com" -H "Access-Control-Request-Method: POST" https://api.finarro.com/api/auth/login 